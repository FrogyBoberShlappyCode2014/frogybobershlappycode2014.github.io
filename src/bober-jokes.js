// –¶–µ –æ—Å–Ω–æ–≤–Ω–∏–π –∫–ª—ñ—î–Ω—Ç—Å—å–∫–∏–π JavaScript –¥–ª—è FrogyBobershLappyCode2014.github.io
// –¢–µ–ø–µ—Ä –≤—ñ–Ω —ñ–Ω—Ç–µ–≥—Ä—É—î –†–ñ–ê–ß –∑ –ø–∞–ø–∫–∏ src! –ù–ê-–ó–ê-–í–ñ–î–ò!

// –Ü–ú–ü–û–†–¢–£–Ñ–ú–û –†–ñ–ê–ß! (–¶–ï –ü–†–ê–¶–Æ–Ñ, –Ø–ö–©–û –í–ò –í–ò–ö–û–†–ò–°–¢–û–í–£–Ñ–¢–ï –°–ò–°–¢–ï–ú–£ –ó–ë–Ü–†–ö–ò, –Ø–ö WEBPACK/ROLLUP.
// –î–õ–Ø –ß–ò–°–¢–û–ì–û HTML+JS –ë–ï–ó –ó–ë–Ü–†–ö–ò, –¢–†–ï–ë–ê –ë–£–î–ï –ó–ê–í–ê–ù–¢–ê–ñ–£–í–ê–¢–ò –Ø–ö –ó–í–ò–ß–ê–ô–ù–Ü –§–ê–ô–õ–ò.)
// import boberJokes from '../src/bober-jokes.js'; // –¶–µ –ù–ï –ü–†–ê–¶–Æ–í–ê–¢–ò–ú–ï –±–µ–∑ –∑–±—ñ—Ä–∫–∏!

document.addEventListener('DOMContentLoaded', async () => { // –î–æ–¥–∞–ª–∏ async
    console.log("–ö–≤–∞-–∫–≤–∞! –ì—Ä–∏–∑—å-–≥—Ä–∏–∑—å! üê∏ü¶´ –®–ª—è–ø–Ω–∏–π –∞—Ä—Ö—ñ—Ç–µ–∫—Ç–æ—Ä —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ –±–µ–∑–ª–∞–¥—É –∑–∞–≤–∞–Ω—Ç–∞–∂–∏–≤ DOM!");

    // ========================================================================
    // –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –†–ñ–ê–ß–£ –∑ src (—è–∫—â–æ –Ω–µ–º–∞—î —Å–∏—Å—Ç–µ–º–∏ –∑–±—ñ—Ä–∫–∏)
    // ========================================================================
    let boberJokes = [];
    try {
        const jokesResponse = await fetch('src/bober-jokes.js'); // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ —è–∫ —Ç–µ–∫—Å—Ç
        const jokesText = await jokesResponse.text();
        // –î—É–∂–µ –ø—Ä–æ—Å—Ç–∏–π –ø–∞—Ä—Å–µ—Ä, —â–æ–± –¥—ñ—Å—Ç–∞—Ç–∏ –º–∞—Å–∏–≤ –∑ —Ç–µ–∫—Å—Ç—É (–Ω–µ –Ω–∞–¥—ñ–π–Ω–∏–π –¥–ª—è —Ä–µ–∞–ª—å–Ω–æ–≥–æ –∫–æ–¥—É!)
        const match = jokesText.match(/const boberJokes = \[([\s\S]*?)\];/);
        if (match && match[1]) {
            // –¶—è —á–∞—Å—Ç–∏–Ω–∞ –¥—É–∂–µ —Å–ø—Ä–æ—â–µ–Ω–∞ —ñ –º–æ–∂–µ –∑–ª–∞–º–∞—Ç–∏—Å—è, —è–∫—â–æ —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª—É src/bober-jokes.js –∑–º—ñ–Ω–∏—Ç—å—Å—è.
            // –î–ª—è —Ä–µ–∞–ª—å–Ω–æ–≥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –∫—Ä–∞—â–µ –∑–±–µ—Ä—ñ–≥–∞—Ç–∏ –∂–∞—Ä—Ç–∏ –≤ src/bober-jokes.json
            const jokesArrayString = `[${match[1]}]`;
            boberJokes = JSON.parse(jokesArrayString.replace(/'/g, '"')); // –ó–∞–º—ñ–Ω—é—î–º–æ –æ–¥–∏–Ω–∞—Ä–Ω—ñ –ª–∞–ø–∫–∏ –Ω–∞ –ø–æ–¥–≤—ñ–π–Ω—ñ –¥–ª—è JSON
        }
        console.log("–ë–æ–±—Ä–æ–≤—ñ –∂–∞—Ä—Ç–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ (–∑ –†–ñ–ê–ß-–ø–∞–ø–∫–∏ src):", boberJokes);
    } catch (error) {
        console.error("–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –±–æ–±—Ä–æ–≤—ñ –∂–∞—Ä—Ç–∏ –¥–ª—è –†–ñ–ê–ß–£:", error);
    }

    // ========================================================================
    // –ù–æ–≤–∞ —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤–∏–≤–æ–¥—É –≤–∏–ø–∞–¥–∫–æ–≤–æ–≥–æ –∂–∞—Ä—Ç—É!
    // ========================================================================
    const boberOutputDiv = document.getElementById('bober-output');
    const gryzGryzButton = document.querySelector('.button-gryz-gryz');

    if (gryzGryzButton && boberOutputDiv) {
        gryzGryzButton.addEventListener('click', () => {
            if (boberJokes.length > 0) {
                const randomJoke = boberJokes[Math.floor(Math.random() * boberJokes.length)];
                boberOutputDiv.innerHTML = `<p class="random-joke">${randomJoke}</p>`;
                boberOutputDiv.classList.add('make-it-wiggle'); // –î–æ–¥–∞—î–º–æ "—Ä–∂–∞—á–Ω–∏–π" CSS –∫–ª–∞—Å
                setTimeout(() => { boberOutputDiv.classList.remove('make-it-wiggle'); }, 1000);
                console.log("–ù–æ–≤–∏–π –∂–∞—Ä—Ç –≤–∏–≤–µ–¥–µ–Ω–æ! –†–ñ–ê–ß-–†–ñ–ê–ß!");
            } else {
                boberOutputDiv.innerHTML = `<p class="random-joke">–ë–æ–±—Ä–∏ –ø—ñ—à–ª–∏ –ø–æ —Å—ñ—Ä–Ω–∏–∫–∏! –†–ñ–ê–ß–£ –ù–ï–ú–ê!</p>`;
            }
        });
    }

    // ========================================================================
    // –Ü–Ω—à—ñ –≤–∞—à—ñ —Ñ—É–Ω–∫—Ü—ñ—ó –∑ –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ–≥–æ script.js...
    // ========================================================================

    // –ê–Ω—ñ–º–∞—Ü—ñ—ó —Ç–∞ –ï—Ñ–µ–∫—Ç–∏
    const sectionTitles = document.querySelectorAll('.section-title');
    sectionTitles.forEach(title => {
        title.classList.add('animated-shaking-title');
    });

    const blinkElements = document.querySelectorAll('.blink-on-load');
    blinkElements.forEach(el => {
        setInterval(() => {
            el.style.opacity = (el.style.opacity === '1' || el.style.opacity === '') ? '0.3' : '1';
        }, 500);
    });

    // –õ–æ–≥—ñ–∫–∞ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–†–æ–∑–∫—Ä–∏—Ç–∏ –ë–∞–∂–∞–Ω–Ω—è" (—è–∫—â–æ —î)
    const ctaButton = document.querySelector('.cta-button');
    const fullWishList = document.getElementById('fullWishListReact');
    if (ctaButton && fullWishList) {
        ctaButton.addEventListener('click', () => {
            if (fullWishList.style.display === 'none' || fullWishList.style.display === '') {
                fullWishList.style.display = 'block';
                ctaButton.textContent = "–°–•–û–í–ê–¢–ò –ú–û–á –ê–ë–°–£–†–î–ù–Ü –ë–æ–±—Ä–æ–≤—ñ –ë–∞–∂–∞–Ω–Ω—è! !!!–ù–ï–ë–ï–ó–ü–ï–ö–ê!!!";
                ctaButton.style.backgroundColor = '#8B0000';
                ctaButton.style.boxShadow = '0 0 15px #FF4136';
            } else {
                fullWishList.style.display = 'none';
                ctaButton.textContent = "–ù–ê–¢–ò–°–ù–ò –ú–ï–ù–ï! –†–æ–∑–∫—Ä–∏—Ç–∏ –≤—Å—ñ –º–æ—ó –ê–ë–°–£–†–î–ù–Ü –ë–æ–±—Ä–æ–≤—ñ –ë–∞–∂–∞–Ω–Ω—è! !!!–ù–ï–ë–ï–ó–ü–ï–ö–ê!!!";
                ctaButton.style.backgroundColor = 'var(--button-bg)';
                ctaButton.style.boxShadow = 'none';
            }
        });
    }

    // –î–∏–Ω–∞–º—ñ—á–Ω–∏–π —Ç–µ–∫—Å—Ç –∞–±–æ "–ø–∞—Å—Ö–∞–ª–∫–∞"
    const footerText = document.querySelector('footer p');
    if (footerText) {
        const nicknames = ['qp78zx23vy10wk54', '–®–ª—è–ø–Ω–∏–π –ê—Ä—Ö—ñ—Ç–µ–∫—Ç–æ—Ä –¶–∏—Ñ—Ä–æ–≤–æ–≥–æ –ë–µ–∑–ª–∞–¥—É', '–ú–∞–π—Å—Ç–µ—Ä –ì—ñ–ø–µ—Ä–ø–æ—Å–∏–ª–∞–Ω—å', '–ú–∞–π—Å—Ç–µ—Ä –í—ñ—Ä—Ç—É–∞–ª—å–Ω–æ—ó –†–µ–∞–ª—å–Ω–æ—Å—Ç—ñ'];
        let currentNickIndex = 0;
        setInterval(() => {
            currentNickIndex = (currentNickIndex + 1) % nicknames.length;
            footerText.innerHTML = `–ü–∞–º'—è—Ç–∞–π—Ç–µ, –≤–∞—à —É–ª—é–±–ª–µ–Ω–∏–π –Ω—ñ–∫–Ω–µ–π–º —Å—å–æ–≥–æ–¥–Ω—ñ: <span style="color: var(--main-purple); font-weight: bold;">${nicknames[currentNickIndex]}</span>. –Ü –ø–∞–º'—è—Ç–∞–π—Ç–µ –ø—Ä–æ InterUDTCP! –¶–µ –ù–ê–ô–í–ê–ñ–õ–ò–í–Ü–®–ï!`;
        }, 5000);
    }

    // –§—É–Ω–∫—Ü—ñ—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –±—Ä–∞—É–∑–µ—Ä–∞ (–≤–∞—à –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–∏–π —Å–∫—Ä–∏–ø—Ç, –∞–¥–∞–ø—Ç–æ–≤–∞–Ω–∏–π)
    function isBrowserTooOld() { /* ... –≤–∞—à –∫–æ–¥ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ ... */ return false;} // –°–∫–æ—Ä–æ—á–µ–Ω–æ –¥–ª—è –ø—Ä–∏–∫–ª–∞–¥—É
    if (isBrowserTooOld()) {
        console.warn("–ë–æ–±—Ä–æ–≤–∞ —Ç—Ä–∏–≤–æ–≥–∞! –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –∑–∞—Å—Ç–∞—Ä—ñ–ª–∏–π –±—Ä–∞—É–∑–µ—Ä! –†–ñ–ê–ß –º–æ–∂–µ –Ω–µ –ø—Ä–∞—Ü—é–≤–∞—Ç–∏!");
    }

    // –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∏–Ω–∞–º—ñ—á–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç—É –∑ JSON (—è–∫—â–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç–µ –∞–¥–º—ñ–Ω–∫—É)
    async function loadDynamicContent() { /* ... –≤–∞—à –∫–æ–¥ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∫–æ–Ω—Ç–µ–Ω—Ç—É ... */ } // –°–∫–æ—Ä–æ—á–µ–Ω–æ –¥–ª—è –ø—Ä–∏–∫–ª–∞–¥—É
    loadDynamicContent();


    console.log("–®–ª—è–ø–Ω–∏–π –º–∞–π—Å—Ç–µ—Ä –≤—ñ—Ä—Ç—É–∞–ª—å–Ω–æ—ó —Ä–µ–∞–ª—å–Ω–æ—Å—Ç—ñ –∑–∞–≤–µ—Ä—à–∏–≤ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è script.js –∑ –†–ñ–ê–ß–ï–ú!");
});

// –î–æ–¥–∞–π—Ç–µ —Ü—ñ —Å—Ç–∏–ª—ñ –¥–æ –≤–∞—à–æ–≥–æ styles.css, —â–æ–± –≤–æ–Ω–∏ –±—É–ª–∏ –∞–∫—Ç–∏–≤–Ω—ñ
/*
.random-joke {
    font-size: 1.5em;
    color: #FFDC00;
    margin-top: 20px;
    font-weight: bold;
    text-shadow: 2px 2px 5px rgba(0,0,0,0.5);
}
*/
